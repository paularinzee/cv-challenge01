version: '3.7'
services:
  frontend:
    build:
      context: ./frontend
    ports:
      - "5173:5173"
    depends_on:
      - backend
    networks:
      # - monitoring-network
      - frontend-network

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: changethis123
      POSTGRES_DB: app
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    depends_on:
      - db
    networks:
      - backend-network

  adminer:
    image: adminer:latest
    restart: always
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: db
    networks:
      - backend-network

  proxy:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: always
    ports:
      - '8090:81'
      - '3001:3000'
      - '443:443'
    volumes:
      - ./proxy/data:/data
      - ./proxy/letsencrypt:/etc/letsencrypt
      - ./conf_files:/conf_files
      - ./entrypoint.sh:/entrypoint.sh
    networks:
      - frontend-network
      - backend-network
    depends_on:
      - frontend
      - backend

  backend:
    build:
      context: ./backend
    env_file: ./backend/.env
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - frontend-network
      - backend-network
    
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - frontend-network
      - backend-network

networks:
  - frontend-network
  - backend-network
  # monitoring-network:
  #   driver: bridge

volumes:
  db_data: